/*
const posts=[
    { title:'post one',body:'this post one'},
    { title:'post two',body:'this post two'}
 ];

 function getPost(){

        setTimeout(()=>{
            let output='';
            posts.forEach((post,index)=>{
            output+=`<li>${post.title}</li>`;

            });

            document.body.innerHTML=output;

        },1000);

 }

 function createPost(post){
    return new Promise((resolve,reject)=>{

        setTimeout(()=>{
            posts.push(post);

            const error=false;

            if(!error){
                resolve();
            }else{
                reject('Error:something went wrong');
            }
            
            },1000);
    });

}

createPost({title:'post three',body:'this post three'}).then(getPost)
.catch(err=>console.log(err));




createPost({title:'post four',body:'this post four'}).then(()=>{
    getPost();
    setTimeout(()=>{
        deletePost(posts).then((res)=>{
            console.log(res);
        })
    

    },1000)
})
.catch(err=>console.log(err));

// deletePost(posts).then((res)=>{
//     console.log(res);
// })
// deletePost(posts).then((res)=>{
//     console.log(res);
// })
// deletePost(posts).then((res)=>{
//     console.log(res);
// }).catch(err=>console.log(err));
// deletePost(posts).then((res)=>{
//     console.log(res);
// }).catch(err=>console.log(err));

function deletePost(posts){
    return new Promise((resolve,reject)=>{
        setTimeout(()=>{
           
            if(posts.length!=0){
               resolve(posts.pop(posts[posts.length]) );
            }else{
                reject("posts is empty")
            }
        },1000)

    });
}


*/


//promise.all

// const promise1=Promise.resolve('Hello World');
// const promise2=10;
// const promise3=new Promise((resolve,reject)=>
// setTimeout(resolve,10000,'Goodbye'));

// const promise4=fetch('https://jsonplaceholder.typicode.com/todos/1')
// .then(response=> response.json());


// Promise.all([promise1, promise2, promise3,promise4]).then(values=>console.log(values));


let users=[{name:'man',lastActivity:new Date()}];


const createNewPost=function(user){
    return new Promise((resolve,reject)=>{
        setTimeout(()=>{
            users.push(user);

            const error=false;

            if(!error){
                resolve(console.log(user));
            }else{
                reject('Error:something went wrong');
            }
            
            },1000);

    })
}


const updateLastActivityTime=function(user){
    return new Promise((resolve,reject)=>{
     
            
            user.lastActivity=new Date().getTime()
            resolve(`${user.name} was last active at ${user.lastActivity}`)


        });
        
}
function deleteUser(users){
    return new Promise((resolve,reject)=>{
        setTimeout(()=>{
           
            if(users.length!=0){
               resolve(users.pop(users[users.length]) );
            }else{
                reject("user list is empty")
            }
        },1000)

    });
}


// createNewPost({name:'aram',lastActivity:'16/05/2052'});
// createNewPost({name:'sasram',lastActivity:'10/4/2022'});



Promise.all([createNewPost({name:'ram',lastActivity:'15/05/2027'}),updateLastActivityTime({name:'ram',lastActivity:'15/05/2027'})]).then((values)=>{
    console.log(values);
    deleteUser(users).then((value)=>{
        console.log(users);
    })
})

















